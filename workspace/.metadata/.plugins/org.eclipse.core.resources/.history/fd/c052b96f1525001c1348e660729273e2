package it.capgemini.academy.giorno6.enumerazioni;

public enum StatoCivile {
	
	/*
	 * togliere il campo booleano "sposato" e aggiungere  "statoCivile" creando un Enum apposito
	 * che abbia valori 
	 * -sposato
	 * -sposata
	 * -celibe
	 * -nubile
	 * -divorziato
	 * -divorziata
	 * -vedovo
	 * -vedova
	 * 
	 * come da convenzione : costruttore, getter, setter
	 * 
	 * applicare il principio di incapsulamento in modo da mantenere funzionante l'interazione con eventuali
	 * altri ambienti che chiamino i vecchi metodi
	 * prendere spunto dalla classe cerchio
	 * 
	 * testare adeguatamente i casi d'uso possibili
	 * 		
	 */
	
	SPOSATO("sposato", Boolean.TRUE),
	SPOSATA("sposata", Boolean.FALSE),
	CELIBE("celibe", Boolean.FALSE),
	NUBILE("nubile", Boolean.FALSE),
	DIVORZIATO("divorziato", Boolean.FALSE),
	DIVORZIATA("divorziata", Boolean.FALSE),
	VEDOVO("vedovo", Boolean.FALSE),
	VEDOVA("vedova", Boolean.FALSE);
	
	
	private String stato;
	private boolean b;
	
	private StatoCivile(String stato, boolean b) {
		this.stato = stato;
		this.b = b;
	}

	public String getStato() {
		return stato;
	}

	public boolean isB() {
		return b;
	}

	public void setStato(String stato) {
		this.stato = stato;
	}

	public void setB(boolean b) {
		this.b = b;
	}
	
	
	
	

}
